PHORONIX TEST SUITE PUBLIC TODO LIST:

### PTS-CORE ###

- Move External Dependencies into OpenBenchmarking.org cloud
- Reporting to OpenBenchmarking.org on broken download URLs for test profiles.
- Reporting of install times to OpenBenchmarking.org and also exposing this information back to clients.
- Support for multiple languages / internationalization.
- BLKID fall-back support for determining file-system [e.g. /sbin/blkid -s TYPE -o value /dev/sda1].
- Possibly restore "weighted suites" [http://phorogit.com/index.php?p=phoronix-test-suite.git&a=commitdiff&h=548e5c073cc90d92ac3f382ca4933d5f556e78c6&hb=444441f9be866f51920e0ad8ca3909951b4d90c5]
- Integrate finish-run command into the run command, auto-detect if the result file was a partial save and then ask if to perform run recovery'
- Multi-threaded downloading of test files
- Optimus / DRI_PRIME=1 / xrandr --listproviders better GPU detection
- NVIDIA make use of UsedDedicatedGPUMemory as new GPU sensor
- Clean up all the WebSocket code and make it fit to spec
- Incremental/streaming result uploads support
- Check with Phodevi's parsers what other tools support JSON outputs - e.g. http://karelzak.blogspot.com/2015/06/json-output-for-basic-tools.html for cleaner parsing
- Improve titles on tables like in: http://openbenchmarking.org/result/1603172-GA-AMDTONGA973

### PTS-GRAPH ###

- Rotated text alignment for some PNG graphics is sometimes off by 90/180 degrees compared to SVG, e.g. http://openbenchmarking.org/s/Compiler

### OPENBENCHMARKING.ORG ###

- Shorten long change-logs on test profile pages - e.g. http://openbenchmarking.org/test/pts/hpcc

### POSSIBLE NEW TEST PROFILES ###

- Hadoop Benchmarks / TeraSort
- LATT Latency Tests [git://git.kernel.dk/latt.git]
- QMC Beaver [http://qmcbeaver.sourceforge.net/]
- Some potential interesting GPGPU tests [http://www.bealto.com/gpu-benchmarks.html]
- WebGL / Chrome Test [http://phoronix.com/forums/showthread.php?73167-Some-Benchmarks-to-add-to-PTS-WebGL-and-Google-Chrome]
- GtkPerf improvements [http://phoronix.com/forums/showthread.php?73047-gtkperf-I-m-maintaining-feature-requests-new-tests]
- SIPP [http://sipp.sourceforge.net/]
- oclGaussCrack [https://hashcat.net/oclGaussCrack/]
- http://hashcat.net/oclhashcat/
- libMicro [https://github.com/portante/libMicro]
- http://markjstock.org/pages/rad_bench.html
- https://code.google.com/p/pyrit/
- https://github.com/acangiano/ruby-benchmark-suite
- http://www.nwchem-sw.org/index.php/Compiling_NWChem
- http://sourceforge.net/projects/ffsb/
- http://www.ratgpu.com/
- http://panthema.net/2013/pmbw/
- http://www.capsl.udel.edu/splash/Download.html
- stephentu/silo
- https://code.google.com/p/smhasher/wiki/SMHasher
- http://benchmarksgame.alioth.debian.org/u32/performance.php?test=fasta / http://benchmarksgame.alioth.debian.org/u32/program.php?test=nbody&lang=gcc&id=1#sourcecode
- https://openfoamwiki.net/index.php/Benchmarks_standard_v1
- Cassandra 1.2 stress - http://docs.datastax.com/en/cassandra/1.2/cassandra/tools/toolsCStress_t.html
- http://gcc.opensuse.org/c++bench-frescobaldi/
- https://gooseberry.blender.org/gooseberry-production-benchmark-file/
- https://github.com/gormanm/mmtests
- https://github.com/soumith/convnet-benchmarks
- http://apt.cs.manchester.ac.uk/projects/PAMELA/tools/SLAMBench/
- https://haasn.xyz/posts/2017-10-05-how-to-benchmark-mpvs-raw-throughput.html
- suitesparse http://faculty.cse.tamu.edu/davis/suitesparse.html
- ospray/ospray
- Microsoft/X-Mem
- https://www2.mrc-lmb.cam.ac.uk/relion/index.php?title=Benchmarks_%26_computer_hardware
- kripke
- nekbone
- https://github.com/u39kun/deep-learning-benchmark
- AMG
- CORAL-2 benchmarks
- CompuBench (Windows)
https://github.com/cart/amethyst-bunnymark
rav1e (not yet multithreaded as of Oct 2018)
gnzlbg/aobench
https://github.com/mpicbg-scicomp/gearshifft
https://github.com/hyperledger/caliper
dav1d
RedShift demo
https://wiki.fysik.dtu.dk/gpaw/devel/benchmarks.html

### WEB SOCKET / HTML5 USER INTERFACE WORK ###

- Implement WebSocket security - add the password prompts from ~/.phoronix-test-suite/user-config.xml, etc
- HTTPS support
- Ensuring only one session at a time, at least for benchmarking
- Handle test installations and external dependencies (prompting for root password handling?)
- Porting more of the web-interface code to the new JavaScript + WebSocket design rather than original PHP design [Originally with the 5.0 UI design it wasn't settled for mostly JS + WebSocket but some of the original code is with a traditional PHP-based + web server design... so slowly move over to newer design.]

### PHOROMATIC ####

- Implement the complementary WebSocket communication to HTTP pulls
- Ensure sane validating of more user input / resource uploads
- Hook up TriggerTarget for allowing event.php to optionally specify a sub-set of systems/groups to target for a given trigger
- Clean up the code and modularize more of the code into functions
